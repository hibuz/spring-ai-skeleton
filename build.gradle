plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.palantir.docker' version '0.36.0'
}

group = 'com.hibuz'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springAiVersion', '1.0.3')
	set('springDocVersion', '2.8.13')
	set('dockerImage', 'ghcr.io/hibuz/spring-ai')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.ai:spring-ai-starter-model-ollama'
	implementation 'org.springframework.ai:spring-ai-starter-mcp-client-webflux'
	implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'
	implementation 'org.springframework.ai:spring-ai-markdown-document-reader'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

	compileOnly 'org.projectlombok:lombok'
  	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

docker {
	name "${dockerImage}"
	tag('ghcr', "${dockerImage}")
	dockerfile file('Dockerfile')
	files tasks.bootJar.outputs.files
	buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
	pull true
	noCache true
}

tasks.named('test') {
	useJUnitPlatform()
}
